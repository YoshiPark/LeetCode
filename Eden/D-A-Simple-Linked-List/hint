建议使用调试工具，注意内存泄露问题，注意在链表头部插入数据的问题，注意.

复习链表： 

传送门

加油！么么哒！

 

MinG 工具(GCC G++ GDB for windows)

 

请大家使用本地编译器(VS或DEV CPP或MinG)编程调试，不要直接在系统上编写代码！

 

=============================================================================

 

请大家相信，这道题是一道很重要的题目，c++里面重要的知识点都在里面体现，特别是c++独有的指针。请不要放弃治疗。

你们骂我也好，吐槽也好，请大家静下心来好好做这道题目，你会有很大收获。

我知道肯定会遇到很多很多问题，希望大家能够平心静气去解决这些问题，比如：

1. 编译错误，很大一部分同学两节实验课都没能使得程序通过编译，原因就是第一对c++语法很不熟悉，域作用符号与命名空间，函数原型等知识理解有偏差，第二对编译器的报错非常陌生，或者不会看编译器的错误信息，关键是要理解。

2. 浅拷贝很深拷贝，有同学直接对指针进行赋值，却忽略了指针指向的整个链表。打个比方，浅拷贝就是“创建快捷方式”，深拷贝就是真正的“复制粘贴”，浅拷贝中两个指针指向同一块内容，深拷贝则是两个指针有两块数据相同的内存空间。

3.new delete运算符不会使用，这个可以参考老师课件。

4. 赋值运算符重载问题，重载时候没有考虑要将当前(this)对象清除导致内存泄露。或者在拷贝构造函数里面调用赋值运算符时候，没有先初始化head和_size。

5. 链表算法不熟悉，重要的是画图，一定要画图！指针之间怎么解出链接，怎么重新链接的，一定要通过草稿来理解。还有在链表头部操作和空链表是特殊情况，必须特殊处理。

6. 内存泄露控制，这是一个很关键的知识。解决内存泄露问题：1. 养成良好的编程习惯，在对原指针赋值的时候，时刻想着会不会出现内存块丢失的问题。 2. 可以维护一个容器，通过重载new和delete运算符来记录堆内存的申请 3. 通过eden系统的提示，慢慢寻找内存错误的源头（需要耐心和细心）

 

如果有问题请找ta，我们很乐意回答你们问题。

 

请大家多点耐心和细心，静下心来，慢慢调试程序，你所遇到的所有问题都是学习c++路上很珍贵的经验，只有一个一个地解决问题，才能真正提高自己的编程能力。

 

建议写一个经验总结：

1. 深拷贝的知识。

2. 赋值运算符为什么要返回 this对象？

3. 内存泄露怎么处理？

4. 编程风格怎么注意？

5. 链表。

 

TA出题不易，越难的题目花的时间越多，通常需要写大家3倍的代码（头文件，源文件，测试文件，随机输入），真正能提高你们的编程能力需要你的耐心和细心。

 

无心虐大家。。。。

 
